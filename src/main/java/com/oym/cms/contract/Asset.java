package com.oym.cms.contract;

import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.codec.datatypes.*;
import org.fisco.bcos.sdk.codec.datatypes.generated.Int256;
import org.fisco.bcos.sdk.codec.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.codec.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

/**
 * 智能合约配置类
 */
public class Asset extends Contract {
    public static final String[] BINARY_ARRAY = {"60806040523480156200001157600080fd5b506110096000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166356004b6a6040518163ffffffff1660e01b8152600401620000ae9062000214565b602060405180830381600087803b158015620000c957600080fd5b505af1158015620000de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000104919062000122565b5062000295565b6000815190506200011c816200027b565b92915050565b6000602082840312156200013557600080fd5b600062000145848285016200010b565b91505092915050565b60006200015d600b8362000260565b91507f61737365745f76616c75650000000000000000000000000000000000000000006000830152602082019050919050565b60006200019f60078362000260565b91507f6163636f756e74000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000620001e160078362000260565b91507f745f6173736574000000000000000000000000000000000000000000000000006000830152602082019050919050565b600060608201905081810360008301526200022f81620001d2565b90508181036020830152620002448162000190565b9050818103604083015262000259816200014e565b9050919050565b600082825260208201905092915050565b6000819050919050565b620002868162000271565b81146200029257600080fd5b50565b611a3180620002a56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80639b80b05014610046578063ea87152b14610076578063fcd7e3c1146100a6575b600080fd5b610060600480360381019061005b91906111f2565b6100d7565b60405161006d9190611641565b60405180910390f35b610090600480360381019061008b9190611271565b61084d565b60405161009d919061165c565b60405180910390f35b6100c060048036038101906100bb91906111b1565b610ad6565b6040516100ce929190611618565b60405180910390f35b60008060019050600080905060008090506100f187610ad6565b809350819450505060011515831515146101b45784866040516101149190611601565b60405180910390208860405161012a9190611601565b60405180910390207f8f6b9fa4d4bf04c7c1c3242d4a5c59ba22525b6761cf89e44becb27c606154bd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040516101819190611692565b60405180910390a47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9350505050610846565b6101bd86610ad6565b809250819450505060011515831515146102805784866040516101e09190611601565b6040518091039020886040516101f69190611601565b60405180910390207f8f6b9fa4d4bf04c7c1c3242d4a5c59ba22525b6761cf89e44becb27c606154bd7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60405161024d91906116ad565b60405180910390a47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe9350505050610846565b848210156103375784866040516102979190611601565b6040518091039020886040516102ad9190611601565b60405180910390207f8f6b9fa4d4bf04c7c1c3242d4a5c59ba22525b6761cf89e44becb27c606154bd7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60405161030491906116c8565b60405180910390a47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd9350505050610846565b8085820110156103f05784866040516103509190611601565b6040518091039020886040516103669190611601565b60405180910390207f8f6b9fa4d4bf04c7c1c3242d4a5c59ba22525b6761cf89e44becb27c606154bd7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040516103bd91906116e3565b60405180910390a47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9350505050610846565b60606103fd868403610bf5565b9050610407610ee0565b60405180604001604052806040518060400160405280600b81526020017f61737365745f76616c756500000000000000000000000000000000000000000081525081526020018381525090506060600167ffffffffffffffff8111801561046d57600080fd5b506040519080825280602002602001820160405280156104a757816020015b610494610ee0565b81526020019060019003908161048c5790505b50905081816000815181106104b857fe5b60200260200101819052506104cb610efa565b604051806020016040528083815250905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663649a84288d846040518363ffffffff1660e01b815260040161053a92919061176e565b602060405180830381600087803b15801561055457600080fd5b505af1158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c9190611188565b90506001811461064a57898b6040516105a59190611601565b60405180910390208d6040516105bb9190611601565b60405180910390207f8f6b9fa4d4bf04c7c1c3242d4a5c59ba22525b6761cf89e44becb27c606154bd7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb60405161061291906116fe565b60405180910390a47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb98505050505050505050610846565b60606106578b8801610bf5565b905060405180604001604052806040518060400160405280600b81526020017f61737365745f76616c75650000000000000000000000000000000000000000008152508152602001828152509450600167ffffffffffffffff811180156106bd57600080fd5b506040519080825280602002602001820160405280156106f757816020015b6106e4610ee0565b8152602001906001900390816106dc5790505b509350848460008151811061070857fe5b602002602001018190525060405180602001604052808581525092506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663649a84288d856040518363ffffffff1660e01b815260040161078092919061176e565b602060405180830381600087803b15801561079a57600080fd5b505af11580156107ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d29190611188565b508a8c6040516107e29190611601565b60405180910390208e6040516107f89190611601565b60405180910390207f8f6b9fa4d4bf04c7c1c3242d4a5c59ba22525b6761cf89e44becb27c606154bd60006040516108309190611677565b60405180910390a4600099505050505050505050505b9392505050565b60008060009050600060019050600080905061086886610ad6565b80925081935050506001151582151514610a5857606061088786610bf5565b9050610891610ee0565b60405180604001604052806040518060400160405280600b81526020017f61737365745f76616c756500000000000000000000000000000000000000000081525081526020018381525090506060600167ffffffffffffffff811180156108f757600080fd5b5060405190808252806020026020018201604052801561093157816020015b61091e610ee0565b8152602001906001900390816109165790505b509050818160008151811061094257fe5b6020026020010181905250610955610efa565b604051806020016040528083815250905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663649a84288c846040518363ffffffff1660e01b81526004016109c492919061176e565b602060405180830381600087803b1580156109de57600080fd5b505af11580156109f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a169190611188565b90506001811415610a2a5760009750610a4e565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe97505b5050505050610a7c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff92505b8486604051610a8b9190611601565b60405180910390207f91c95f04198617c60eaf2180fbca88fc192db379657df0e412a9f7dd4ebbe95d85604051610ac2919061165c565b60405180910390a382935050505092915050565b600080610ae1610efa565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633e10510b866040518263ffffffff1660e01b8152600401610b3d9190611739565b60006040518083038186803b158015610b5557600080fd5b505afa158015610b69573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b929190611134565b8093508192505050600080905060008360000151511415610bbf5760008080905094509450505050610bf0565b610be48360000151600081518110610bd357fe5b602002602001015160200151610d39565b90508181945094505050505b915091565b60606000821415610c3d576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610d34565b600082905060005b60008214610c67578080600101915050600a8281610c5f57fe5b049150610c45565b60608167ffffffffffffffff81118015610c8057600080fd5b506040519080825280601f01601f191660200182016040528015610cb35781602001600182028036833780820191505090505b50905060006001830390505b60008614610d2c57600a8681610cd157fe5b0660300160f81b82828060019003935081518110610ceb57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681610d2457fe5b049550610cbf565b819450505050505b919050565b6000610d46826000610d4d565b9050919050565b60006060839050600080905060","0080905060008090505b8351811015610ec1576030848281518110610d7b57fe5b602001015160f81c60f81b60f81c60ff1610158015610db757506039848281518110610da357fe5b602001015160f81c60f81b60f81c60ff1611155b15610e09578115610dda576000861415610dd057610ec1565b8580600190039650505b600a830292506030848281518110610dee57fe5b602001015160f81c60f81b60f81c60ff160383019250610eb4565b602e848281518110610e1757fe5b602001015160f81c60f81b60f81c60ff161415610e78578115610e6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e66906117b8565b60405180910390fd5b60019150610eb3565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eaa90611719565b60405180910390fd5b5b8080600101915050610d64565b506000851115610ed45784600a0a820291505b81935050505092915050565b604051806040016040528060608152602001606081525090565b6040518060200160405280606081525090565b600082601f830112610f1e57600080fd5b8151610f31610f2c82611805565b6117d8565b9150818183526020840193506020810190508360005b83811015610f775781518601610f5d88826110a3565b845260208401935060208301925050600181019050610f47565b5050505092915050565b600081519050610f90816119b6565b92915050565b600081519050610fa5816119cd565b92915050565b600082601f830112610fbc57600080fd5b8135610fcf610fca8261182d565b6117d8565b91508082526020830160208301858383011115610feb57600080fd5b610ff6838284611963565b50505092915050565b600082601f83011261101057600080fd5b815161102361101e8261182d565b6117d8565b9150808252602083016020830185838301111561103f57600080fd5b61104a838284611972565b50505092915050565b60006020828403121561106557600080fd5b61106f60206117d8565b9050600082015167ffffffffffffffff81111561108b57600080fd5b61109784828501610f0d565b60008301525092915050565b6000604082840312156110b557600080fd5b6110bf60406117d8565b9050600082015167ffffffffffffffff8111156110db57600080fd5b6110e784828501610fff565b600083015250602082015167ffffffffffffffff81111561110757600080fd5b61111384828501610fff565b60208301525092915050565b60008135905061112e816119e4565b92915050565b6000806040838503121561114757600080fd5b600061115585828601610f81565b925050602083015167ffffffffffffffff81111561117257600080fd5b61117e85828601611053565b9150509250929050565b60006020828403121561119a57600080fd5b60006111a884828501610f96565b91505092915050565b6000602082840312156111c357600080fd5b600082013567ffffffffffffffff8111156111dd57600080fd5b6111e984828501610fab565b91505092915050565b60008060006060848603121561120757600080fd5b600084013567ffffffffffffffff81111561122157600080fd5b61122d86828701610fab565b935050602084013567ffffffffffffffff81111561124a57600080fd5b61125686828701610fab565b92505060406112678682870161111f565b9150509250925092565b6000806040838503121561128457600080fd5b600083013567ffffffffffffffff81111561129e57600080fd5b6112aa85828601610fab565b92505060206112bb8582860161111f565b9150509250929050565b60006112d183836115ae565b905092915050565b60006112e482611869565b6112ee818561188c565b93508360208202850161130085611859565b8060005b8581101561133c578484038952815161131d85826112c5565b94506113288361187f565b925060208a01995050600181019050611304565b50829750879550505050505092915050565b611357816118ca565b82525050565b611366816118d6565b82525050565b611375816118e3565b82525050565b611384816118f7565b82525050565b61139381611909565b82525050565b6113a28161191b565b82525050565b6113b18161192d565b82525050565b6113c08161193f565b82525050565b6113cf81611951565b82525050565b60006113e082611874565b6113ea818561189d565b93506113fa818560208601611972565b611403816119a5565b840191505092915050565b600061141982611874565b61142381856118ae565b9350611433818560208601611972565b61143c816119a5565b840191505092915050565b600061145282611874565b61145c81856118bf565b935061146c818560208601611972565b80840191505092915050565b6000611485602c836118ae565b91507f4e6f6e2d6e756d6572616c2063686172616374657220656e636f756e7465726560008301527f6420696e20737472696e672100000000000000000000000000000000000000006020830152604082019050919050565b60006114eb6007836118ae565b91507f745f6173736574000000000000000000000000000000000000000000000000006000830152602082019050919050565b600061152b602c836118ae565b91507f4d6f7265207468616e206f6e6520646563696d616c20656e636f756e7465726560008301527f6420696e20737472696e672100000000000000000000000000000000000000006020830152604082019050919050565b600060208301600083015184820360008601526115a182826112d9565b9150508091505092915050565b600060408301600083015184820360008601526115cb82826113d5565b915050602083015184820360208601526115e582826113d5565b9150508091505092915050565b6115fb816118ed565b82525050565b600061160d8284611447565b915081905092915050565b600060408201905061162d600083018561134e565b61163a60208301846115f2565b9392505050565b6000602082019050611656600083018461135d565b92915050565b6000602082019050611671600083018461136c565b92915050565b600060208201905061168c600083018461137b565b92915050565b60006020820190506116a7600083018461138a565b92915050565b60006020820190506116c26000830184611399565b92915050565b60006020820190506116dd60008301846113a8565b92915050565b60006020820190506116f860008301846113b7565b92915050565b600060208201905061171360008301846113c6565b92915050565b6000602082019050818103600083015261173281611478565b9050919050565b60006040820190508181036000830152611752816114de565b90508181036020830152611766818461140e565b905092915050565b60006060820190508181036000830152611787816114de565b9050818103602083015261179b818561140e565b905081810360408301526117af8184611584565b90509392505050565b600060208201905081810360008301526117d18161151e565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156117fb57600080fd5b8060405250919050565b600067ffffffffffffffff82111561181c57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561184457600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60008115159050919050565b60008160010b9050919050565b6000819050919050565b6000819050919050565b6000611902826118e3565b9050919050565b6000611914826118e3565b9050919050565b6000611926826118e3565b9050919050565b6000611938826118e3565b9050919050565b600061194a826118e3565b9050919050565b600061195c826118e3565b9050919050565b82818337600083830152505050565b60005b83811015611990578082015181840152602081019050611975565b8381111561199f576000848401525b50505050565b6000601f19601f8301169050919050565b6119bf816118ca565b81146119ca57600080fd5b50565b6119d6816118e3565b81146119e157600080fd5b50565b6119ed816118ed565b81146119f857600080fd5b5056fea26469706673582212204ba34ceb662aa5ec25bfb1bd46cc781a223e6c2a474d62cd32912491326574fc64736f6c634300060a0033"};

    public static final String BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"60806040523480156200001157600080fd5b506110096000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92a78016040518163ffffffff1660e01b8152600401620000ae9062000214565b602060405180830381600087803b158015620000c957600080fd5b505af1158015620000de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000104919062000122565b5062000295565b6000815190506200011c816200027b565b92915050565b6000602082840312156200013557600080fd5b600062000145848285016200010b565b91505092915050565b60006200015d600b8362000260565b91507f61737365745f76616c75650000000000000000000000000000000000000000006000830152602082019050919050565b60006200019f60078362000260565b91507f745f6173736574000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000620001e160078362000260565b91507f6163636f756e74000000000000000000000000000000000000000000000000006000830152602082019050919050565b600060608201905081810360008301526200022f8162000190565b905081810360208301526200024481620001d2565b9050818103604083015262000259816200014e565b9050919050565b600082825260208201905092915050565b6000819050919050565b620002868162000271565b81146200029257600080fd5b50565b611a3180620002a56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635b325d7814610046578063612d2bff14610077578063b433c7ca146100a7575b600080fd5b610060600480360381019061005b91906111b1565b6100d7565b60405161006e929190611618565b60405180910390f35b610091600480360381019061008c91906111f2565b6101f6565b60405161009e9190611641565b60405180910390f35b6100c160048036038101906100bc9190611271565b61096c565b6040516100ce919061165c565b60405180910390f35b6000806100e2610ee0565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcce5531866040518263ffffffff1660e01b815260040161013e9190611719565b60006040518083038186803b15801561015657600080fd5b505afa15801561016a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101939190611134565b80935081925050506000809050600083600001515114156101c057600080809050945094505050506101f1565b6101e583600001516000815181106101d457fe5b602002602001015160200151610bf5565b90508181945094505050505b915091565b6000806001905060008090506000809050610210876100d7565b809350819450505060011515831515146102d35784866040516102339190611601565b6040518091039020886040516102499190611601565b60405180910390207f105af2c562df33af7eaa9de5fb0c18d8d30f281a18f95a8f76b44353a322693c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040516102a09190611692565b60405180910390a47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9350505050610965565b6102dc866100d7565b8092508194505050600115158315151461039f5784866040516102ff9190611601565b6040518091039020886040516103159190611601565b60405180910390207f105af2c562df33af7eaa9de5fb0c18d8d30f281a18f95a8f76b44353a322693c7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60405161036c91906116ad565b60405180910390a47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe9350505050610965565b848210156104565784866040516103b69190611601565b6040518091039020886040516103cc9190611601565b60405180910390207f105af2c562df33af7eaa9de5fb0c18d8d30f281a18f95a8f76b44353a322693c7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60405161042391906116c8565b60405180910390a47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd9350505050610965565b80858201101561050f57848660405161046f9190611601565b6040518091039020886040516104859190611601565b60405180910390207f105af2c562df33af7eaa9de5fb0c18d8d30f281a18f95a8f76b44353a322693c7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040516104dc91906116e3565b60405180910390a47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9350505050610965565b606061051c868403610c09565b9050610526610ef3565b60405180604001604052806040518060400160405280600b81526020017f61737365745f76616c756500000000000000000000000000000000000000000081525081526020018381525090506060600167ffffffffffffffff8111801561058c57600080fd5b506040519080825280602002602001820160405280156105c657816020015b6105b3610ef3565b8152602001906001900390816105ab5790505b50905081816000815181106105d757fe5b60200260200101819052506105ea610ee0565b604051806020016040528083815250905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663af5081748d846040518363ffffffff1660e01b815260040161065992919061174e565b602060405180830381600087803b15801561067357600080fd5b505af1158015610687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ab9190611188565b90506001811461076957898b6040516106c49190611601565b60405180910390208d6040516106da9190611601565b60405180910390207f105af2c562df33af7eaa9de5fb0c18d8d30f281a18f95a8f76b44353a322693c7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb60405161073191906116fe565b60405180910390a47ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb98505050505050505050610965565b60606107768b8801610c09565b905060405180604001604052806040518060400160405280600b81526020017f61737365745f76616c75650000000000000000000000000000000000000000008152508152602001828152509450600167ffffffffffffffff811180156107dc57600080fd5b5060405190808252806020026020018201604052801561081657816020015b610803610ef3565b8152602001906001900390816107fb5790505b509350848460008151811061082757fe5b602002602001018190525060405180602001604052808581525092506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663af5081748d856040518363ffffffff1660e01b815260040161089f92919061174e565b602060405180830381600087803b1580156108b957600080fd5b505af11580156108cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f19190611188565b508a8c6040516109019190611601565b60405180910390208e6040516109179190611601565b60405180910390207f105af2c562df33af7eaa9de5fb0c18d8d30f281a18f95a8f76b44353a322693c600060405161094f9190611677565b60405180910390a4600099505050505050505050505b9392505050565b600080600090506000600190506000809050610987866100d7565b80925081935050506001151582151514610b775760606109a686610c09565b90506109b0610ef3565b60405180604001604052806040518060400160405280600b81526020017f61737365745f76616c756500000000000000000000000000000000000000000081525081526020018381525090506060600167ffffffffffffffff81118015610a1657600080fd5b50604051908082528060200260200182016040528015610a5057816020015b610a3d610ef3565b815260200190600190039081610a355790505b5090508181600081518110610a6157fe5b6020026020010181905250610a74610ee0565b604051806020016040528083815250905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663af5081748c846040518363ffffffff1660e01b8152600401610ae392919061174e565b602060405180830381600087803b158015610afd57600080fd5b505af1158015610b11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b359190611188565b90506001811415610b495760009750610b6d565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe97505b5050505050610b9b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff92505b8486604051610baa9190611601565b60405180910390207f7ac7a04970319ae8fc5b92fe177d000fee3c00c92f8e78aae13d6571f17c351f85604051610be1919061165c565b60405180910390a382935050505092915050565b6000610c02826000610d4d565b9050919050565b60606000821415610c51576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610d48565b600082905060005b60008214610c7b578080600101915050600a8281610c7357fe5b049150610c59565b60608167ffffffffffffffff81118015610c9457600080fd5b506040519080825280601f01601f191660200182016040528015610cc75781602001600182028036833780820191505090505b50905060006001830390505b60008614610d4057600a8681610ce557fe5b0660300160f81b82828060019003935081518110610cff57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681610d3857fe5b049550610cd3565b819450505050505b919050565b60006060839050600080905060","0080905060008090505b8351811015610ec1576030848281518110610d7b57fe5b602001015160f81c60f81b60f81c60ff1610158015610db757506039848281518110610da357fe5b602001015160f81c60f81b60f81c60ff1611155b15610e09578115610dda576000861415610dd057610ec1565b8580600190039650505b600a830292506030848281518110610dee57fe5b602001015160f81c60f81b60f81c60ff160383019250610eb4565b602e848281518110610e1757fe5b602001015160f81c60f81b60f81c60ff161415610e78578115610e6f576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610e66906117b8565b60405180910390fd5b60019150610eb3565b6040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610eaa90611798565b60405180910390fd5b5b8080600101915050610d64565b506000851115610ed45784600a0a820291505b81935050505092915050565b6040518060200160405280606081525090565b604051806040016040528060608152602001606081525090565b600082601f830112610f1e57600080fd5b8151610f31610f2c82611805565b6117d8565b9150818183526020840193506020810190508360005b83811015610f775781518601610f5d88826110a3565b845260208401935060208301925050600181019050610f47565b5050505092915050565b600081519050610f90816119b6565b92915050565b600081519050610fa5816119cd565b92915050565b600082601f830112610fbc57600080fd5b8135610fcf610fca8261182d565b6117d8565b91508082526020830160208301858383011115610feb57600080fd5b610ff6838284611963565b50505092915050565b600082601f83011261101057600080fd5b815161102361101e8261182d565b6117d8565b9150808252602083016020830185838301111561103f57600080fd5b61104a838284611972565b50505092915050565b60006020828403121561106557600080fd5b61106f60206117d8565b9050600082015167ffffffffffffffff81111561108b57600080fd5b61109784828501610f0d565b60008301525092915050565b6000604082840312156110b557600080fd5b6110bf60406117d8565b9050600082015167ffffffffffffffff8111156110db57600080fd5b6110e784828501610fff565b600083015250602082015167ffffffffffffffff81111561110757600080fd5b61111384828501610fff565b60208301525092915050565b60008135905061112e816119e4565b92915050565b6000806040838503121561114757600080fd5b600061115585828601610f81565b925050602083015167ffffffffffffffff81111561117257600080fd5b61117e85828601611053565b9150509250929050565b60006020828403121561119a57600080fd5b60006111a884828501610f96565b91505092915050565b6000602082840312156111c357600080fd5b600082013567ffffffffffffffff8111156111dd57600080fd5b6111e984828501610fab565b91505092915050565b60008060006060848603121561120757600080fd5b600084013567ffffffffffffffff81111561122157600080fd5b61122d86828701610fab565b935050602084013567ffffffffffffffff81111561124a57600080fd5b61125686828701610fab565b92505060406112678682870161111f565b9150509250925092565b6000806040838503121561128457600080fd5b600083013567ffffffffffffffff81111561129e57600080fd5b6112aa85828601610fab565b92505060206112bb8582860161111f565b9150509250929050565b60006112d183836115ae565b905092915050565b60006112e482611869565b6112ee818561188c565b93508360208202850161130085611859565b8060005b8581101561133c578484038952815161131d85826112c5565b94506113288361187f565b925060208a01995050600181019050611304565b50829750879550505050505092915050565b611357816118ca565b82525050565b611366816118d6565b82525050565b611375816118e3565b82525050565b611384816118f7565b82525050565b61139381611909565b82525050565b6113a28161191b565b82525050565b6113b18161192d565b82525050565b6113c08161193f565b82525050565b6113cf81611951565b82525050565b60006113e082611874565b6113ea818561189d565b93506113fa818560208601611972565b611403816119a5565b840191505092915050565b600061141982611874565b61142381856118ae565b9350611433818560208601611972565b61143c816119a5565b840191505092915050565b600061145282611874565b61145c81856118bf565b935061146c818560208601611972565b80840191505092915050565b60006114856007836118ae565b91507f745f6173736574000000000000000000000000000000000000000000000000006000830152602082019050919050565b60006114c5602c836118ae565b91507f4e6f6e2d6e756d6572616c2063686172616374657220656e636f756e7465726560008301527f6420696e20737472696e672100000000000000000000000000000000000000006020830152604082019050919050565b600061152b602c836118ae565b91507f4d6f7265207468616e206f6e6520646563696d616c20656e636f756e7465726560008301527f6420696e20737472696e672100000000000000000000000000000000000000006020830152604082019050919050565b600060208301600083015184820360008601526115a182826112d9565b9150508091505092915050565b600060408301600083015184820360008601526115cb82826113d5565b915050602083015184820360208601526115e582826113d5565b9150508091505092915050565b6115fb816118ed565b82525050565b600061160d8284611447565b915081905092915050565b600060408201905061162d600083018561134e565b61163a60208301846115f2565b9392505050565b6000602082019050611656600083018461135d565b92915050565b6000602082019050611671600083018461136c565b92915050565b600060208201905061168c600083018461137b565b92915050565b60006020820190506116a7600083018461138a565b92915050565b60006020820190506116c26000830184611399565b92915050565b60006020820190506116dd60008301846113a8565b92915050565b60006020820190506116f860008301846113b7565b92915050565b600060208201905061171360008301846113c6565b92915050565b6000604082019050818103600083015261173281611478565b90508181036020830152611746818461140e565b905092915050565b6000606082019050818103600083015261176781611478565b9050818103602083015261177b818561140e565b9050818103604083015261178f8184611584565b90509392505050565b600060208201905081810360008301526117b1816114b8565b9050919050565b600060208201905081810360008301526117d18161151e565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156117fb57600080fd5b8060405250919050565b600067ffffffffffffffff82111561181c57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561184457600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60008115159050919050565b60008160010b9050919050565b6000819050919050565b6000819050919050565b6000611902826118e3565b9050919050565b6000611914826118e3565b9050919050565b6000611926826118e3565b9050919050565b6000611938826118e3565b9050919050565b600061194a826118e3565b9050919050565b600061195c826118e3565b9050919050565b82818337600083830152505050565b60005b83811015611990578082015181840152602081019050611975565b8381111561199f576000848401525b50505050565b6000601f19601f8301169050919050565b6119bf816118ca565b81146119ca57600080fd5b50565b6119d6816118e3565b81146119e157600080fd5b50565b6119ed816118ed565b81146119f857600080fd5b5056fea2646970667358221220801af3e33d6a1ae5c9a52bfaaaa697f784cea090231981efbe7030e124e0056464736f6c634300060a0033"};

    public static final String SM_BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"ret\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"account\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"asset_value\",\"type\":\"uint256\"}],\"name\":\"RegisterEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"ret\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"from_account\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"to_account\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"account\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"asset_value\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"account\",\"type\":\"string\"}],\"name\":\"select\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from_account\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to_account\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"int16\",\"name\":\"\",\"type\":\"int16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"};

    public static final String ABI = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", ABI_ARRAY);

    public static final String FUNC_REGISTER = "register";

    public static final String FUNC_SELECT = "select";

    public static final Event REGISTEREVENT_EVENT = new Event("RegisterEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>(true) {}, 
                    new TypeReference<Utf8String>(true) {}));
    ;

    protected Asset(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public static String getABI() {
        return ABI;
    }

    public List<RegisterEventEventResponse> getRegisterEventEvents(
            TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(REGISTEREVENT_EVENT, transactionReceipt);
        ArrayList<RegisterEventEventResponse> responses = new ArrayList<RegisterEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            RegisterEventEventResponse typedResponse = new RegisterEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.asset_value = (BigInteger) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.ret = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public TransactionReceipt register(String account, String asset_value) {
        final Function function = new Function(
                FUNC_REGISTER, 
                Arrays.<Type>asList(new Utf8String(account),
                new Utf8String(asset_value)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void register(String account, String asset_value, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_REGISTER, 
                Arrays.<Type>asList(new Utf8String(account),
                new Utf8String(asset_value)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRegister(String account, String asset_value) {
        final Function function = new Function(
                FUNC_REGISTER, 
                Arrays.<Type>asList(new Utf8String(account),
                new Utf8String(asset_value)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, String> getRegisterInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_REGISTER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = this.functionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<String> getRegisterOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_REGISTER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = this.functionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(
                (String) results.get(0).getValue()
                );
    }

    public Tuple2<Boolean, String> select(String account) throws ContractException {
        final Function function = new Function(FUNC_SELECT, 
                Arrays.<Type>asList(new Utf8String(account)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<Boolean, String>(
                (Boolean) results.get(0).getValue(), 
                (String) results.get(1).getValue());
    }
    

    public static Asset load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new Asset(contractAddress, client, credential);
    }

    public static Asset deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(Asset.class, client, credential, getBinary(client.getCryptoSuite()), null, null, null);
    }

    public static class RegisterEventEventResponse {
        public TransactionReceipt.Logs log;

        public byte[] account;

        public BigInteger asset_value;

        public BigInteger ret;
    }
}
